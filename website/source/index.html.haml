#happy-seed
%section.masthead.under.first

  #clouds
  #fg-clouds
  .container
    .row
      .col-md-12.text-center
        #logo-container
          #ted{"data-scroll-reveal"=>"enter from the top but wait .5s"}
          %h2#info
            Seed.
            %br
            Build MVPs quickly.
          %h1#seed-logo.logo{"data-scroll-reveal"=>"enter bottom but wait 1s over 1s"}
            Happy Seed
        .row
          .col-md-8.col-md-offset-2.mb-1
            .overbracket{"data-scroll-reveal"=>"enter bottom over 1s"}
              %h2{"data-scroll-reveal"=>"enter bottom but wait 1.5s over 1.5s"}
                The fastest way to get an MVP out the door.<br/>
                Quickly set up a project and get all the pesky details right
        #bottom{"data-scroll-reveal"=>"enter bottom but wait 4s over 2s"}
          = link_to '#what' do
            %span.glyphicon.glyphicon-chevron-down

%section#what.green.over
  .background
  .container
    .row
      .left-col
        %h1.jumbo What?

      .right-col
        %h3
          Starting up building applications in seconds with the follow features:

        %ul.checkmarked.bigger.text-centered.parenthesized.text-center
          %li User Accounts
          %li Smart testing
          %li Splash pages
          %li Integration with facebook, twitter, google, etc.
          %li Smart Generators with HAML and Bootstrap
          %li Admin Tools
          %li Use what you need
          %li Much more...

    .row
      .col-xs-12
        .embed-responsive.embed-responsive-16by9
          <iframe src="https://www.youtube.com/embed/Pn2ehV8EDFM?rel=0" allowfullscreen></iframe>

%section.cream.over
  .background
  .container
    .row
      .col-md-12
        %h2.text-center How is Happy Seed put together?
        %br
    .row
      .hidden-xs.hidden-sm.col-xs-12
        =partial "svg" 
      .hidden-md.hidden-lg.col-sm-4.col-xs-12
        =partial "vert_svg"
      .col-md-12.col-sm-8.col-xs-12.comment_section
        .row
          .info_on_flow.intro_comment
            %h3 Explore the diagram!
            %p Click anywhere on the diagram to see what each option for happy seed installs and what it is connected to.
            %p This should give you an idea of what options are dependant on others.
     
          .info_on_flow.base_comment.hide_comment
            %h3 Base install:
            %p Disables Turbolinks, includes haml, meta-tags, and dotenv-rails. Sets up basic http authentication, and puma.
            %p
              =link_to "Check out the docs >", "/docs/README.00.base.html"
          .info_on_flow.bootstrap_comment.hide_comment
            %h3 Bootstrap install:
            %p Installs bootsrap-sass, modernizr-rails, organizes your assets directory organizes views and layouts directories, sets up application_helper methods to help with forms, includes flash support in application layout, updates rails scaffolding template to use bootsrap forms, turns off scaffolding stylesheet generation.
            %p
              =link_to "Check out the docs >", "/docs/README.01.bootstrap.html"
          .info_on_flow.devise_comment.hide_comment
            %h3 Devise install:
            %p Installs devise, generates user class, copies over devise views and converts them to haml, and installs MailPreview for the device mailer.
            %p
              =link_to "Check out the docs >", "/docs/README.03.devise.html"
          .info_on_flow.splash_comment.hide_comment
            %h3 Splash install:
            %p Installs a splash page, sets up splash controller and sets up mailing list sign up with mailchimp. You just have to dump in your list id and api key.
            %p
              =link_to "Check out the docs >", "/docs/README.02.splash.html"
          .info_on_flow.facebook_comment.twitter_comment.instagram_comment.github_comment.googleauth_comment.omniauth_comment.hide_comment
            %h3 Omniauth install:
            %p= "Generates identity model link to user, installs omniauth, an omniauth controller, updates devise config, adds routes, removes devise email/password validations, adds FormUsers < User model for validations, and adds a registration controller to allow the user to add email and password for auth strategies that don't support it."
            %p
              =link_to "Check out the docs >", "/docs/README.04.omniauth.html"

          .info_on_flow.jazz_hands_comment.hide_comment
            %h3 Jazz Hands install:
            %p Installs jazz hands. Tada!!!!!!
            %p
              =link_to "Check out the docs >", "/docs/README.12.jazz_hands.html"

          .info_on_flow.html_email_comment.hide_comment
            %h3 HTML Email install:
            %p Additional info...
            %p
              =link_to "Check out the docs >", "/docs/README.07.admin.html"
          .info_on_flow.angular_view_comment.angular_install_comment.hide_comment
            %h3 Angular install:
            %p Installs angularjs-rails, updates application.js, creates structure in app/assets for templates and angular controllers, installs angular_controller.rb, and creates a sample landing view.
            %p
              =link_to "Check out the docs >", "/docs/README.10.angular_install.html"
          .info_on_flow.api_comment.hide_comment
            %h3 Api install:
            %p Installs apitome and rspec_api_documentation, uses token auth.
            %p
              =link_to "Check out the docs >", "/docs/README.01.api.html"

          .info_on_flow.invitable_comment.hide_comment
            %h3 Devise invitable install:
            %p Installs devise_invitable, migrates your db, adds columns for invite, copies over devise views and formats them with bootstrap.
            %p
              =link_to "Check out the docs >", "/docs/README.03.devise_invitable.html"

          .info_on_flow.confirmable_comment.hide_comment
            %h3 Devise confirmable install:
            %p Additional info...
            %p
              =link_to "Check out the docs >", "/docs/README.03.devise_invitable.html"

          .info_on_flow.admin_comment.hide_comment
            %h3 Admin install:
            %p Additional info...
            %p
              =link_to "Check out the docs >", "/docs/README.03.devise_invitable.html"

          .info_on_flow.roles_comment.hide_comment
            %h3 Roles install:
            %p Additional info...
            %p
              =link_to "Check out the docs >", "/docs/README.03.devise_invitable.html"

          .info_on_flow.admin_comment.hide_comment
            %h3 Admin install:
            %p Additional info...
            %p
              =link_to "Check out the docs >", "/docs/README.03.devise_invitable.html"





%section#why.green.under
  .background
  .container
    .row
      .left-col
        %h1.jumbo Why?

      .right-col
        %h1.text-center-xs.text-center-sm We like to try out lots of different ideas, <br class="hidden-xs">and we build a lot of apps for&nbsp;clients.

        %p The ruby community has tons of great gems out there that have saved a huge amount of time. But every time we started a project we found ourselves doing the same stuff over and over, figuring out exactly how we wanted to configure a particular gem for a particular problem. Even though we were more interested in creating a new product with particular functionality we were spending a lot of time doing&nbsp;"plumbing".

        %h2.text-centered.parenthesized.text-center
          Why not make it really easy to get through the plumbing, so we can focus on the part that makes the application different rather than the stuff that makes it the&nbsp;same?

%section#how.cream.over
  .background
  .container
    .row
      .left-col
        %h1.jumbo How?

      .right-col
        %h2 Install the gem

        %pre="$ gem install happy_seed"

        %h2 This creates the Rails plugin on your system.

        %p
          There is a small application template that is used to start the app, which itself includes the happy_seed gem.  This exposes the rail generators and templates to your project, which is how functionality gets installed.

          %h2 Generate a new rails app
          %pre="$ happy_seed rails app_name"

          %h2 Now create!

          %p
            You will get prompted for what you want to install.
            = link_to "Read more about it!", "/docs/rails.html"

          %h2 Start editing!

          %p The seed gem itself is a set of generators, and only that.  Functionality is either copied directly into your application, or included via a gem.

          %p Since a lot of the generators alter routes, when you destroy a generator (for example the splash page) it may not leave your routes in the correct state.

        .doc-group
          .doc-col
            %h2 Rails Plugins

            %p If you want to extract some functionality of your own application, rails plugins are the way to go. We like autotest and rspec, which was always tricky to configure, so we packaged that up to!

            %pre= "$ happy_seed plugin acts_as_awesome"

            %p
              = link_to "Read more", "/docs/plugin.html"
              about it!

          .doc-col
            %h2 Rails Engines

            %p Or if you want to make an engine

            %pre= "$ happy_seed engine acts_as_awesome"

            %p
              = link_to "Read more", "/docs/plugin.html"
              about it!

        .doc-group
          .doc-col
            %h2 Middleman static site

            %pre= "$ happy_seed static static_site"

            %p
              = link_to "Read more", "/docs/middleman.html"
              about it!

          .doc-col
            %h2 Middleman static blog

            %pre= "$ happy_seed static_blog static_site"

            %p
              = link_to "Read more", "/docs/middleman.html"
              about it!

%section#who
